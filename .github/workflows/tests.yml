name: Tests
on:
  - push
  - pull_request
jobs:
  tests:
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: 3.8, os: ubuntu-latest, session: "pre-commit" }
          - { python-version: 3.8, os: ubuntu-latest, session: "tests" }
          - { python-version: 3.9, os: ubuntu-latest, session: "tests" }
          - { python-version: 3.8, os: windows-latest, session: "windows-tests" }
          - { python-version: 3.8, os: macos-latest, session: "tests" }
          - { python-version: 3.9, os: macos-latest, session: "tests" }
          - { python-version: 3.8, os: ubuntu-latest, session: "docs-build" }

    name: "${{ matrix.session }} ${{ matrix.python-version }} / ${{ matrix.os }}"
    env:
      NOXSESSION: "${{ matrix.session }}"
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-python@v2.2.1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - run: pip install nox==2020.12.31
    - run: pip install nox-poetry==0.8.4
    - run: pip install poetry==1.1.4
    - name: Compute pre-commit cache key
      if: matrix.session == 'pre-commit'
      id: pre-commit-cache
      shell: python
      run: |
        import hashlib
        import sys
        python = "py{}.{}".format(*sys.version_info[:2])
        payload = sys.version.encode() + sys.executable.encode()
        digest = hashlib.sha256(payload).hexdigest()
        result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])
        print("::set-output name=result::{}".format(result))
    - name: Restore pre-commit cache
      uses: actions/cache@v2.1.4
      if: matrix.session == 'pre-commit'
      with:
        path: ~/.cache/pre-commit
        key: "${{ steps.pre-commit-cache.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}"
        restore-keys: |
          "${{ steps.pre-commit-cache.outputs.result }}-"
    - name: Run Nox
      run: |
        nox --force-color --python=${{ matrix.python-version }}

    - name: Upload coverage data
      if: always() && matrix.session == 'tests'
      uses: "actions/upload-artifact@v2.2.2"
      with:
        name: coverage-data
        path: ".coverage.*"


  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2.3.4

      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8

      - run: pip install nox==2020.12.31
      - run: pip install nox-poetry==0.8.4
      - run: pip install poetry==1.1.4

      - name: Download coverage data
        uses: actions/download-artifact@v2.0.8
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        run: |
          nox --force-color --session=coverage

      - name: Create coverage report
        run: |
          nox --force-color --session=coverage -- xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v1.3.1